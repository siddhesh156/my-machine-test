[{"/Users/siddhesh/Desktop/test-react/my-machine-test/src/index.js":"1","/Users/siddhesh/Desktop/test-react/my-machine-test/src/App.js":"2","/Users/siddhesh/Desktop/test-react/my-machine-test/src/reportWebVitals.js":"3","/Users/siddhesh/Desktop/test-react/my-machine-test/src/Components/ErrorPage.js":"4","/Users/siddhesh/Desktop/test-react/my-machine-test/src/Components/MyTable.js":"5","/Users/siddhesh/Desktop/test-react/my-machine-test/src/Components/MyTable2.js":"6","/Users/siddhesh/Desktop/test-react/my-machine-test/src/Components/CompanyAddress.js":"7","/Users/siddhesh/Desktop/test-react/my-machine-test/src/Containers/Home/Home.js":"8","/Users/siddhesh/Desktop/test-react/my-machine-test/src/Containers/EmployeeList/EmployeeList.js":"9","/Users/siddhesh/Desktop/test-react/my-machine-test/src/Components/ContactList/ContactList.js":"10"},{"size":543,"mtime":1608293278221,"results":"11","hashOfConfig":"12"},{"size":785,"mtime":1608979162633,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608044093132,"results":"14","hashOfConfig":"12"},{"size":103,"mtime":1608045015140,"results":"15","hashOfConfig":"12"},{"size":2941,"mtime":1608642082537,"results":"16","hashOfConfig":"12"},{"size":4266,"mtime":1608646653054,"results":"17","hashOfConfig":"12"},{"size":510,"mtime":1608978075508,"results":"18","hashOfConfig":"12"},{"size":3619,"mtime":1608979232228,"results":"19","hashOfConfig":"12"},{"size":1312,"mtime":1608980308035,"results":"20","hashOfConfig":"12"},{"size":502,"mtime":1608981962308,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1q0s72y",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/siddhesh/Desktop/test-react/my-machine-test/src/index.js",[],["45","46"],"/Users/siddhesh/Desktop/test-react/my-machine-test/src/App.js",["47","48"],"/Users/siddhesh/Desktop/test-react/my-machine-test/src/reportWebVitals.js",[],"/Users/siddhesh/Desktop/test-react/my-machine-test/src/Components/ErrorPage.js",[],"/Users/siddhesh/Desktop/test-react/my-machine-test/src/Components/MyTable.js",["49","50","51","52","53","54","55"],"import {React,useState,useEffect} from \"react\"\n\nconst MyTabel = () =>{\n\n    const  myTableData = [\n        {'id':1,1:'',2:'Class1',3:'Class2',4:'Class3',5:'Class4',6:'Class5',7:'Class6'},\n        {'id':2,1:'MONDAY',2:'1',3:'2',4:'3',5:'4',6:'5',7:'6'},\n        {'id':3,1:'TUESDAY',2:'1',3:'2',4:'3',5:'4',6:'5',7:'6'},\n        {'id':4,1:'WEDNESDAY',2:'1',3:'2',4:'3',5:'4',6:'5',7:'6'},\n        {'id':5,1:'THURSDAY',2:'1',3:'2',4:'3',5:'4',6:'5',7:'6'},\n        {'id':6,1:'FRIDAY',2:'1',3:'2',4:'3',5:'4',6:'5',7:'6'}\n   ];\n\n   const [data,setData] = useState([])\n   const [errorInput,setErrorInput] = useState('')\n   useEffect(()=>{setData(myTableData)},[])\n\n  const submitStepSignupForm=(id,value)=>{\n    //console.log(this.props,'signup4');\n      let newArray = data.slice();\n      newArray.push({'id':id,'value':value});\n    setData(newArray)\n}\n\n// append column to the HTML table\nconst appendColumn=()=> {\n         let obj =  data.map((p) => {\n              let size = Object.keys(p).length;\n              p[size+1] = '-';\n              return p;\n         });\n         setData(obj)\n\n     }\n// edit Column\nconst editColumn=(p,k,e)=> {\n   let inputValue = e.target.innerText;\n     let obj = p.p;\n    let objId = obj.id;\n    let position = k.k;\n    let values = Object.values(obj);\n    if(values.indexOf(inputValue) == -1){\n         obj[position] = inputValue;\n         let stateCopy = data;\n         stateCopy.map((object,index) =>{\n              if(object.id == objId){\n                   object = obj[position];\n              }\n         })\n         setData(stateCopy)\n         setErrorInput('')\n         console.log(stateCopy,'stateCopystateCopy');\n    }else{\n        setErrorInput('This period is also available in your list');\n         return false;\n    }\n     }\n\n   \n         let tableStyle = {\n              align:\"center\"\n         };\n         let list = data.map(p =>{\n              return (\n                   <tr className=\"grey2\" key={p.id}>\n                        {Object.keys(p).filter(k => k !== 'id').map(k => {\n                              return (<td className=\"grey1\" key={p.id+''+k}><div suppressContentEditableWarning=\"true\" contentEditable=\"true\"\n                             value={k} onInput={editColumn.bind(this,{p},{k})}>{p[k]}</div></td>);\n                        })}\n                   </tr>\n              );\n         });\n         return (\n              <fieldset className=\"step-4\">\n                   <div className=\"heading\">\n                        <h3>Tell us about your schedule</h3>\n                        <p>Dynamic Data Table by Rohan Arihant </p>\n                   </div>\n                   <div className=\"schedule padd-lr\">\n                        <table cellSpacing=\"3\" id=\"mytable\" style={tableStyle}>\n                             <tbody>{list}</tbody>\n                        </table>\n\n                   </div>\n\n                   \n              </fieldset>\n    )\n}\n\nexport default MyTabel;\n","/Users/siddhesh/Desktop/test-react/my-machine-test/src/Components/MyTable2.js",["56"],"\nimport React,{useState} from \"react\";\nimport MaterialTable from 'material-table';\n//icons\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst MyTabel2 = props => {\n    \n      const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n      };\n\n      const [state, setState] = React.useState({\n        columns: [\n          { title: 'LAST NAME', field: 'lastName' },\n          { title: 'FIRST NAME', field: 'firstName' },\n          { title: 'EMAIL ID', field: 'emailId', type: 'email' },\n          \n        ],\n        data: [],\n      });\n\n  return (\n    <MaterialTable \n    icons={tableIcons}\n       title=\"Add Students\"\n       columns={state.columns}\n       data={state.data}\n       editable={{\n           onRowAdd: (newData) =>\n           new Promise((resolve) => {\n               \n               setTimeout(() => {\n               resolve();\n               //addList(newData)\n               setState((prevState) => {\n                   const data = [...prevState.data];\n                   data.push(newData);\n                   return { ...prevState, data };\n               });\n               }, 600);\n           }),\n           onRowUpdate: (newData, oldData) =>\n           new Promise((resolve) => {\n              \n               setTimeout(() => {\n               resolve();\n               //updateList(newData, oldData)\n               if (oldData) {\n                   setState((prevState) => {\n                   const data = [...prevState.data];\n                   data[data.indexOf(oldData)] = newData;\n                   return { ...prevState, data };\n                   });\n               }\n                }, 600);\n           }),\n           onRowDelete: (oldData) =>\n           new Promise((resolve) => {\n               \n               setTimeout(() => {\n               resolve();\n               //deleteList(oldData)\n               setState((prevState) => {\n                   const data = [...prevState.data];\n                   data.splice(data.indexOf(oldData), 1);\n                   return { ...prevState, data };\n               });\n               }, 600);\n           }),\n       }}\n       />\n  );\n};\n\nexport default MyTabel2;\n \n","/Users/siddhesh/Desktop/test-react/my-machine-test/src/Components/CompanyAddress.js",[],"/Users/siddhesh/Desktop/test-react/my-machine-test/src/Containers/Home/Home.js",["57","58","59"],"/Users/siddhesh/Desktop/test-react/my-machine-test/src/Containers/EmployeeList/EmployeeList.js",["60"],"/Users/siddhesh/Desktop/test-react/my-machine-test/src/Components/ContactList/ContactList.js",["61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"71","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":17},{"ruleId":"67","severity":1,"message":"72","line":15,"column":11,"nodeType":"69","messageId":"70","endLine":15,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":16,"column":41,"nodeType":"75","endLine":16,"endColumn":43,"suggestions":"76"},{"ruleId":"67","severity":1,"message":"77","line":18,"column":9,"nodeType":"69","messageId":"70","endLine":18,"endColumn":29},{"ruleId":"67","severity":1,"message":"78","line":26,"column":7,"nodeType":"69","messageId":"70","endLine":26,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":42,"column":35,"nodeType":"81","messageId":"82","endLine":42,"endColumn":37},{"ruleId":"83","severity":1,"message":"84","line":45,"column":39,"nodeType":"85","messageId":"86","endLine":45,"endColumn":41},{"ruleId":"79","severity":1,"message":"80","line":46,"column":28,"nodeType":"81","messageId":"82","endLine":46,"endColumn":30},{"ruleId":"67","severity":1,"message":"87","line":2,"column":15,"nodeType":"69","messageId":"70","endLine":2,"endColumn":23},{"ruleId":"67","severity":1,"message":"87","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":67,"column":72,"nodeType":"90","messageId":"82","endLine":67,"endColumn":82},{"ruleId":"91","severity":1,"message":"92","line":76,"column":21,"nodeType":"93","endLine":76,"endColumn":56},{"ruleId":"67","severity":1,"message":"87","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"94","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":9,"column":13,"nodeType":"93","endLine":9,"endColumn":20},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ErrorPage' is defined but never used.","'errorInput' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'myTableData'. Either include it or remove the dependency array.","ArrayExpression",["99"],"'submitStepSignupForm' is assigned a value but never used.","'appendColumn' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'fontFamily'.","ObjectExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DriveEtaRounded' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [myTableData]",{"range":"102","text":"103"},[655,657],"[myTableData]"]